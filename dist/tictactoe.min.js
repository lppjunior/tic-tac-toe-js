let Tictactoe=(function(){class Tictactoe{constructor(c){let conf=jQuery.extend(CD,c);this.c=new TictactoeController(conf);this.v=new conf.view(this.c);}setConfig(c){this.c.setConfig(c);}start(){if(this.c.target.length==0){let error=new _E("Target object not found.");jQuery(this.c.target).trigger("error",[error]);}this.v.render();this.c.start();}}class TictactoeView{constructor(game){this.target=game.target;game.on("update",(e,data)=>{this.update(data);}).on("finish",(e,winner,pn)=>{this.f(winner,pn);});}render(){this.target.html('\<table summary="grid">\<tbody>\<tr>\<td></td>\<td></td>\<td></td>\</tr>\<tr>\<td></td>\<td></td>\<td></td>\</tr>\<tr>\<td></td>\<td></td>\<td></td>\</tr>\</tbody>\</table>');this.i();}i(){let that=this;this.is=this.target.find("td");this.is.click((e)=>{this.click(e);});}click(e){let target=jQuery(e.target);let pn=this.is.index(target);jQuery(this.target).trigger("play",[pn]);}update(b){for(let p in b){let style="";switch(b[p]){case Tictactoe.CIRCLE:style="circle";break;case Tictactoe.CROSS:style="cross";break;}let td=this.is.get(p);jQuery(td).attr("class",style);}}f(winner,pn){for(let p in pn){let td=this.is.get(pn[p]);jQuery(td).addClass("victory");}let desc="";switch(winner){case Tictactoe.NONE:desc="Deu velha";break;case Tictactoe.USER:desc="Usu√°rio ganhou";break;default:desc="Computador ganhou";break;}let div=jQuery('<div class="winner opaque">'+desc+'</div>').click((e)=>{this.target.parent(".box").remove();});this.target.parent().append(div);}}Tictactoe.USER=1;Tictactoe.COMPUTER_EASY=2;Tictactoe.COMPUTER_MEDIUM=3;Tictactoe.COMPUTER_HARD=4;Tictactoe.NONE=0;Tictactoe.CIRCLE=1;Tictactoe.CROSS=2;let _V=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];let CD={'target':null,'enemy':Tictactoe.COMPUTER_MEDIUM,'start':Tictactoe.USER,'view':TictactoeView};class TictactoeController{constructor (conf){this.e=conf.enemy;this.target=jQuery(conf.target);this.on("restart",()=>{this.start();}).on("play",(e,p)=>{this.play(p);});}on(event,returnFunction){jQuery(this.target).on(event,returnFunction);return this;}clean(){this.b=[0,0,0,0,0,0,0,0,0];this.finish=false;this.turn=Tictactoe.CIRCLE;this.victory=Tictactoe.NONE;this.gp=0;}start(){this.clean();this.update();}play(p){this.playTurn(p,Tictactoe.USER);}playTurn(p,user){if(this.b[p]!=0 || this.finish){return;}let turn=this.turn;this.turn=(this.turn==Tictactoe.CIRCLE) ? Tictactoe.CROSS:Tictactoe.CIRCLE;this.b[p]=turn;this.gp++;this.update();this.checkFinish();if(user==Tictactoe.USER){this.pb();}}pb(){if(this.finish) return;let fn=null;switch(this.e){case Tictactoe.COMPUTER_EASY:fn=TB.e;break;case Tictactoe.COMPUTER_MEDIUM:fn=TB.m;break;case Tictactoe.COMPUTER_HARD:fn=TB.h;break;}if(fn!=null){fn(this.b,this.turn,(pn)=>{this.playTurn(pn,this.e);},this.gp);}}update(){jQuery(this.target).trigger("update",[this.b]);}checkFinish(){let victoryPosition;for(let v in _V){if(this.b[_V[v][0]]==this.b[_V[v][1]]&& this.b[_V[v][0]]==this.b[_V[v][2]]&& this.b[_V[v][0]]!=Tictactoe.NONE){this.finish=true;this.victory=this.b[_V[v][0]];victoryPosition=_V[v];break;}}if(!this.finish && this.gp==9){this.finish=true;this.victory=Tictactoe.NONE;victoryPosition=[];}if(this.finish){let params=[this.victory,victoryPosition];jQuery(this.target).trigger("finish",params);}}}class TB{static e(b,turn,play){let it;do{it=Math.floor(Math.random()*9);}while(b[it]!=Tictactoe.NONE);play(it);}static m(b,turn,play){if(TB.pw(b,turn,play)){return;}TB.e(b,turn,play);}static h(b,turn,play,gp){if(TB.pw(b,turn,play)){return;}let it=-1;if(gp==1){if(b[4]==Tictactoe.NONE){it=4;}else{it=0;}}else if(gp==2){let is=[0,2,6,8];for(let i in is){if(b[i]==Tictactoe.NONE){it=is[i];break;}}}else if(gp==3){let is=(b[7]==TB.o()) ?[5,3,1,7]:[1,3,5,7];for(let i in is){if(b[is[i]]==Tictactoe.NONE){it=is[i];break;}}}if(it>=0){play(it);}else{TB.m(b,turn,play);}}static pw(b,turn,play){let victoryPos=TB.gv(b,turn);if(victoryPos>-1){play(victoryPos);return true;}let loosePos=TB.gl(b,turn);if(loosePos>-1){play(loosePos);return true;}return false;}static gl(b,turn){let o=TB.o(turn);return TB.gv(b,o);}static gv(b,turn){for(let victory in _V){let count=0;let victoryPos=-1;for(let p in _V[victory]){if(b[_V[victory][p]]==turn){count++;}else{victoryPos=_V[victory][p];}}if(count==2 && b[victoryPos]==Tictactoe.NONE){return victoryPos;}}return -1;}static o(turn){return (turn==Tictactoe.CIRCLE) ? Tictactoe.CROSS:Tictactoe.CIRCLE;}}class _E extends Error{constructor(msg){super(msg);}}return Tictactoe;})();